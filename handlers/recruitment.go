package handlers

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"log"
	"net/http"
	"talent_glimpse/common/response"
	"talent_glimpse/common/typ"
	"talent_glimpse/service"
)

func CreateRecruitmentInfo(ctx *gin.Context) {
	var req typ.CreateRecruitmentInfoReq
	if err := ctx.ShouldBindJSON(&req); err != nil {
		log.Println(fmt.Errorf("[CreateRecruitmentInfo] param bid error: %v", err))
		ctx.JSON(http.StatusBadRequest, &response.T{
			MetaData: &response.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by ShouldBindJson: " + err.Error(),
			},
		})
		return
	}
	err := service.CreateRecruitmentInfo(req)
	if err != nil {
		log.Println(fmt.Errorf("[CreateRecruitmentInfo] create wrong: %v", err))
		ctx.JSON(http.StatusBadRequest, &response.T{
			MetaData: &response.MetaData{
				Code: http.StatusBadRequest,
				Msg:  "An error message generated by service.CreateRecruitmentInfo: " + err.Error(),
			},
		})
		return
	}
	ctx.JSON(http.StatusOK, &response.T{
		MetaData: &response.MetaData{
			Code: http.StatusOK,
			Msg:  "[CreateRecruitmentInfo] ok",
		},
		Result: nil,
	})
}
